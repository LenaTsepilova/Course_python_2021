"""Урок 6. Задание 1"""

# Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод
# running (запуск). Атрибут реализовать как приватный. В рамках метода реализовать переключение
# светофора в режимы: красный, желтый, зеленый. Продолжительность первого состояния (красный) составляет 7 секунд,
# второго (желтый) — 2 секунды, третьего (зеленый) — на ваше усмотрение. Переключение между режимами должно
# осуществляться только в указанном порядке (красный, желтый, зеленый). Проверить работу примера, создав
# экземпляр и вызвав описанный метод.
# Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении выводить
# соответствующее сообщение и завершать скрипт.

# import time
# class TrafficLight:
#     def __init__(self, color):
#         self.color = color
#
#     def running(self):
#         colors = ["red", "yellow", "green"]
#         index_start = colors.index(self.color)
#         while True:
#             print(colors[index_start])
#             if colors[index_start] == "red":
#                 time.sleep(7)
#
#             elif colors[index_start] == "yellow":
#                 time.sleep(2)
#
#             else:
#                 time.sleep(5)
#
#             if index_start == 2:
#                 index_start = 0
#
#             else:
#                 index_start += 1
#
# One_TrafficLight = TrafficLight("yellow")
# One_TrafficLight.running()

 # colors.index(self.color) - метод списков, определяет индекс элемента в списке

"""Урок 6. Задание 2"""

# Реализовать класс Road (дорога), в котором определить атрибуты: length (длина), width (ширина).
# Значения данных атрибутов должны передаваться при создании экземпляра класса. Атрибуты сделать
# защищенными. Определить метод расчета массы асфальта, необходимого для покрытия всего дорожного полотна.
# Использовать формулу: длина * ширина * масса асфальта для покрытия одного кв метра дороги асфальтом,
# толщиной в 1 см * чи сло см толщины полотна. Проверить работу метода.
# Например: 20м * 5000м * 25кг * 5см = 12500 т

class Road:
    def __init__(self, length, width):
        self.__length = length
        self.__width = width

    def mass_asf(self, mass, height):
        return self.__length * self.__width * mass * height
one_road = Road(20, 5000)
print(one_road.mass_asf(25, 5))